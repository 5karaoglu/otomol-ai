{"ast":null,"code":"var _jsxFileName = \"/Users/besirkaraoglu/otomol-ai/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Box, Container, Paper, Typography, List, ListItem, ListItemText, Button, IconButton } from '@mui/material';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [connection, setConnection] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorder = useRef(null);\n  const audioChunks = useRef([]);\n  const reconnectTimeout = useRef(null);\n  const maxReconnectAttempts = 5;\n  const reconnectAttempts = useRef(0);\n  const connectWebSocket = () => {\n    try {\n      const ws = new WebSocket('ws://localhost:8000/ws');\n      setConnection(ws);\n      ws.onopen = () => {\n        console.log('WebSocket bağlantısı kuruldu');\n        reconnectAttempts.current = 0;\n        setMessages(prev => [...prev, {\n          type: 'system',\n          text: 'Bağlantı kuruldu'\n        }]);\n      };\n      ws.onmessage = async event => {\n        try {\n          const response = JSON.parse(event.data);\n\n          // Son mesaj \"Dinleniyor...\" ise onu kaldır\n          setMessages(prev => {\n            const newMessages = [...prev];\n            if (newMessages.length > 0 && newMessages[newMessages.length - 1].text === 'Dinleniyor...') {\n              newMessages.pop();\n            }\n            return newMessages;\n          });\n\n          // Eğer tanınan ses varsa, kullanıcı mesajı olarak ekle\n          if (response.recognized_text) {\n            setMessages(prev => [...prev, {\n              type: 'user',\n              text: response.recognized_text\n            }]);\n          }\n\n          // Bot yanıtını ekle\n          setMessages(prev => [...prev, {\n            type: 'bot',\n            text: response.text\n          }]);\n          if (response.audio) {\n            const audio = new Audio(response.audio);\n            await audio.play().catch(console.error);\n            startRecording();\n          }\n        } catch (error) {\n          console.error('WebSocket mesaj hatası:', error);\n          if (typeof event.data === 'string') {\n            setMessages(prev => [...prev, {\n              type: 'error',\n              text: event.data\n            }]);\n          }\n        }\n      };\n      ws.onerror = error => {\n        console.error('WebSocket hatası:', error);\n        setMessages(prev => [...prev, {\n          type: 'error',\n          text: 'Bağlantı hatası oluştu'\n        }]);\n      };\n      ws.onclose = event => {\n        console.log('WebSocket bağlantısı kapandı:', event.code);\n        setConnection(null);\n\n        // Planlı kapanma değilse yeniden bağlan\n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectAttempts.current < maxReconnectAttempts) {\n            reconnectAttempts.current += 1;\n            const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 10000);\n            setMessages(prev => [...prev, {\n              type: 'system',\n              text: `Yeniden bağlanılıyor (${reconnectAttempts.current}/${maxReconnectAttempts})...`\n            }]);\n            reconnectTimeout.current = setTimeout(() => {\n              connectWebSocket();\n            }, delay);\n          } else {\n            setMessages(prev => [...prev, {\n              type: 'error',\n              text: 'Bağlantı kurulamadı. Lütfen sayfayı yenileyin.'\n            }]);\n          }\n        }\n      };\n      return ws;\n    } catch (error) {\n      console.error('WebSocket bağlantı hatası:', error);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        text: 'Bağlantı hatası: ' + error.message\n      }]);\n      return null;\n    }\n  };\n  const startRecording = async () => {\n    if (isRecording) return;\n\n    // WebSocket bağlantısını kontrol et\n    if (!connection || connection.readyState !== WebSocket.OPEN) {\n      console.log('WebSocket bağlantısı yok, yeniden bağlanılıyor...');\n      await new Promise(resolve => setTimeout(resolve, 1000)); // 1 saniye bekle\n      const newWs = connectWebSocket();\n      if (!newWs) {\n        setMessages(prev => [...prev, {\n          type: 'error',\n          text: 'Bağlantı kurulamadı, tekrar deneniyor...'\n        }]);\n        setTimeout(startRecording, 2000);\n        return;\n      }\n    }\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      mediaRecorder.current = new MediaRecorder(stream, {\n        mimeType: 'audio/webm;codecs=opus'\n      });\n      audioChunks.current = [];\n      mediaRecorder.current.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunks.current.push(event.data);\n        }\n      };\n      mediaRecorder.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunks.current, {\n          type: 'audio/webm;codecs=opus'\n        });\n        const reader = new FileReader();\n        reader.onload = async () => {\n          if (connection && connection.readyState === WebSocket.OPEN) {\n            setMessages(prev => [...prev, {\n              type: 'system',\n              text: 'Dinleniyor...'\n            }]);\n            connection.send(reader.result);\n          } else {\n            console.log('Ses gönderilemiyor, bağlantı kapalı');\n            setMessages(prev => [...prev, {\n              type: 'error',\n              text: 'Bağlantı hatası, yeniden bağlanılıyor...'\n            }]);\n            connectWebSocket();\n          }\n        };\n        reader.readAsDataURL(audioBlob);\n      };\n      mediaRecorder.current.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Mikrofon erişim hatası:', error);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        text: 'Mikrofon hatası: ' + error.message\n      }]);\n      setIsRecording(false);\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const response = await fetch('http://localhost:8000/upload-database', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        setMessages(prev => [...prev, {\n          type: 'system',\n          text: 'Veritabanı başarıyla yüklendi'\n        }]);\n      } else {\n        const errorText = await response.text();\n        setMessages(prev => [...prev, {\n          type: 'error',\n          text: 'Veritabanı yükleme hatası: ' + errorText\n        }]);\n      }\n    } catch (error) {\n      console.error('Error uploading database:', error);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        text: 'Veritabanı yükleme hatası: ' + error.message\n      }]);\n    }\n  };\n  const toggleRecording = async () => {\n    if (isRecording) {\n      // Kaydı durdur\n      if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n        mediaRecorder.current.stop();\n        mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n      }\n      setIsRecording(false);\n    } else {\n      // Yeni kayıt başlat\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        mediaRecorder.current = new MediaRecorder(stream, {\n          mimeType: 'audio/webm;codecs=opus'\n        });\n        audioChunks.current = [];\n        mediaRecorder.current.ondataavailable = event => {\n          if (event.data.size > 0) {\n            audioChunks.current.push(event.data);\n          }\n        };\n        mediaRecorder.current.onstop = async () => {\n          const audioBlob = new Blob(audioChunks.current, {\n            type: 'audio/webm;codecs=opus'\n          });\n          const reader = new FileReader();\n          reader.onload = async () => {\n            if (connection && connection.readyState === WebSocket.OPEN) {\n              setMessages(prev => [...prev, {\n                type: 'system',\n                text: 'Dinleniyor...'\n              }]);\n              connection.send(reader.result);\n            } else {\n              setMessages(prev => [...prev, {\n                type: 'error',\n                text: 'Bağlantı hatası, yeniden bağlanılıyor...'\n              }]);\n              connectWebSocket();\n            }\n          };\n          reader.readAsDataURL(audioBlob);\n        };\n        mediaRecorder.current.start();\n        setIsRecording(true);\n      } catch (error) {\n        console.error('Mikrofon erişim hatası:', error);\n        setMessages(prev => [...prev, {\n          type: 'error',\n          text: 'Mikrofon hatası: ' + error.message\n        }]);\n        setIsRecording(false);\n      }\n    }\n  };\n  useEffect(() => {\n    let mainWs = null;\n    let welcomeWs = null;\n    const initializeConnection = async () => {\n      // Ana WebSocket bağlantısını kur\n      mainWs = connectWebSocket();\n\n      // Hoşgeldin mesajı için yeni WebSocket bağlantısı\n      welcomeWs = new WebSocket('ws://localhost:8000/ws');\n      welcomeWs.onopen = () => {\n        welcomeWs.send(JSON.stringify({\n          type: 'welcome'\n        }));\n      };\n      welcomeWs.onmessage = async event => {\n        try {\n          const response = JSON.parse(event.data);\n          setMessages([{\n            type: 'bot',\n            text: response.text\n          }]);\n          if (response.audio) {\n            const audio = new Audio(response.audio);\n            await audio.play().catch(console.error);\n            welcomeWs.close();\n          }\n        } catch (error) {\n          console.error('Hoşgeldin mesajı hatası:', error);\n          welcomeWs.close();\n        }\n      };\n      welcomeWs.onerror = () => {\n        console.error('Hoşgeldin bağlantısı hatası');\n        welcomeWs.close();\n      };\n    };\n    initializeConnection();\n    return () => {\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n      }\n      if (mainWs) {\n        mainWs.close(1000, 'Component unmounting');\n      }\n      if (welcomeWs) {\n        welcomeWs.close();\n      }\n      if (mediaRecorder.current) {\n        mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const getMessageColor = type => {\n    switch (type) {\n      case 'bot':\n        return 'primary.main';\n      case 'user':\n        return 'success.main';\n      case 'error':\n        return 'error.main';\n      case 'system':\n        return 'text.secondary';\n      default:\n        return 'text.primary';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"T\\xFCrk\\xE7e Sesli Asistan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 2,\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            accept: \".json\",\n            style: {\n              display: 'none'\n            },\n            id: \"database-file\",\n            type: \"file\",\n            onChange: handleFileUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"database-file\",\n            style: {\n              flexGrow: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              component: \"span\",\n              fullWidth: true,\n              startIcon: /*#__PURE__*/_jsxDEV(UploadFileIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 28\n              }, this),\n              children: \"Veritaban\\u0131 Y\\xFCkle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: isRecording ? \"error\" : \"primary\",\n            onClick: toggleRecording,\n            sx: {\n              width: 56,\n              height: 56\n            },\n            children: isRecording ? /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 2,\n          mb: 2,\n          minHeight: '300px',\n          maxHeight: '500px',\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: message.text,\n              secondary: message.type === 'bot' ? 'OtomolAi' : message.type === 'user' ? 'Osman Bey' : message.type === 'system' ? 'Sistem' : 'Hata',\n              sx: {\n                color: getMessageColor(message.type),\n                textAlign: message.type === 'user' ? 'right' : 'left'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7bveFGbr69y0j5MctuydhfiZbvk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Box","Container","Paper","Typography","List","ListItem","ListItemText","Button","IconButton","UploadFileIcon","MicIcon","StopIcon","jsxDEV","_jsxDEV","App","_s","messages","setMessages","connection","setConnection","isRecording","setIsRecording","mediaRecorder","audioChunks","reconnectTimeout","maxReconnectAttempts","reconnectAttempts","connectWebSocket","ws","WebSocket","onopen","console","log","current","prev","type","text","onmessage","event","response","JSON","parse","data","newMessages","length","pop","recognized_text","audio","Audio","play","catch","error","startRecording","onerror","onclose","code","delay","Math","min","pow","setTimeout","message","readyState","OPEN","Promise","resolve","newWs","stream","navigator","mediaDevices","getUserMedia","MediaRecorder","mimeType","ondataavailable","size","push","onstop","audioBlob","Blob","reader","FileReader","onload","send","result","readAsDataURL","start","handleFileUpload","file","target","files","formData","FormData","append","fetch","method","body","ok","errorText","toggleRecording","state","stop","getTracks","forEach","track","mainWs","welcomeWs","initializeConnection","stringify","close","clearTimeout","getMessageColor","maxWidth","children","sx","my","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","mb","display","gap","accept","style","id","onChange","htmlFor","flexGrow","fullWidth","startIcon","color","onClick","width","height","minHeight","maxHeight","overflow","map","index","primary","secondary","textAlign","_c","$RefreshReg$"],"sources":["/Users/besirkaraoglu/otomol-ai/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport {\n  Box,\n  Container,\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Button,\n  IconButton,\n} from '@mui/material';\nimport UploadFileIcon from '@mui/icons-material/UploadFile';\nimport MicIcon from '@mui/icons-material/Mic';\nimport StopIcon from '@mui/icons-material/Stop';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [connection, setConnection] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const mediaRecorder = useRef(null);\n  const audioChunks = useRef([]);\n  const reconnectTimeout = useRef(null);\n  const maxReconnectAttempts = 5;\n  const reconnectAttempts = useRef(0);\n\n  const connectWebSocket = () => {\n    try {\n      const ws = new WebSocket('ws://localhost:8000/ws');\n      setConnection(ws);\n\n      ws.onopen = () => {\n        console.log('WebSocket bağlantısı kuruldu');\n        reconnectAttempts.current = 0;\n        setMessages(prev => [...prev, { type: 'system', text: 'Bağlantı kuruldu' }]);\n      };\n\n      ws.onmessage = async (event) => {\n        try {\n          const response = JSON.parse(event.data);\n          \n          // Son mesaj \"Dinleniyor...\" ise onu kaldır\n          setMessages(prev => {\n            const newMessages = [...prev];\n            if (newMessages.length > 0 && newMessages[newMessages.length - 1].text === 'Dinleniyor...') {\n              newMessages.pop();\n            }\n            return newMessages;\n          });\n\n          // Eğer tanınan ses varsa, kullanıcı mesajı olarak ekle\n          if (response.recognized_text) {\n            setMessages(prev => [...prev, { type: 'user', text: response.recognized_text }]);\n          }\n          \n          // Bot yanıtını ekle\n          setMessages(prev => [...prev, { type: 'bot', text: response.text }]);\n          \n          if (response.audio) {\n            const audio = new Audio(response.audio);\n            await audio.play().catch(console.error);\n            startRecording();\n          }\n        } catch (error) {\n          console.error('WebSocket mesaj hatası:', error);\n          if (typeof event.data === 'string') {\n            setMessages(prev => [...prev, { type: 'error', text: event.data }]);\n          }\n        }\n      };\n\n      ws.onerror = (error) => {\n        console.error('WebSocket hatası:', error);\n        setMessages(prev => [...prev, { type: 'error', text: 'Bağlantı hatası oluştu' }]);\n      };\n\n      ws.onclose = (event) => {\n        console.log('WebSocket bağlantısı kapandı:', event.code);\n        setConnection(null);\n        \n        // Planlı kapanma değilse yeniden bağlan\n        if (event.code !== 1000 && event.code !== 1001) {\n          if (reconnectAttempts.current < maxReconnectAttempts) {\n            reconnectAttempts.current += 1;\n            const delay = Math.min(1000 * Math.pow(2, reconnectAttempts.current), 10000);\n            setMessages(prev => [...prev, { type: 'system', text: `Yeniden bağlanılıyor (${reconnectAttempts.current}/${maxReconnectAttempts})...` }]);\n            \n            reconnectTimeout.current = setTimeout(() => {\n              connectWebSocket();\n            }, delay);\n          } else {\n            setMessages(prev => [...prev, { type: 'error', text: 'Bağlantı kurulamadı. Lütfen sayfayı yenileyin.' }]);\n          }\n        }\n      };\n\n      return ws;\n    } catch (error) {\n      console.error('WebSocket bağlantı hatası:', error);\n      setMessages(prev => [...prev, { type: 'error', text: 'Bağlantı hatası: ' + error.message }]);\n      return null;\n    }\n  };\n\n  const startRecording = async () => {\n    if (isRecording) return;\n    \n    // WebSocket bağlantısını kontrol et\n    if (!connection || connection.readyState !== WebSocket.OPEN) {\n      console.log('WebSocket bağlantısı yok, yeniden bağlanılıyor...');\n      await new Promise(resolve => setTimeout(resolve, 1000)); // 1 saniye bekle\n      const newWs = connectWebSocket();\n      if (!newWs) {\n        setMessages(prev => [...prev, { type: 'error', text: 'Bağlantı kurulamadı, tekrar deneniyor...' }]);\n        setTimeout(startRecording, 2000);\n        return;\n      }\n    }\n    \n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      mediaRecorder.current = new MediaRecorder(stream, {\n        mimeType: 'audio/webm;codecs=opus'\n      });\n      audioChunks.current = [];\n      \n      mediaRecorder.current.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunks.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.current.onstop = async () => {\n        const audioBlob = new Blob(audioChunks.current, { type: 'audio/webm;codecs=opus' });\n        const reader = new FileReader();\n        \n        reader.onload = async () => {\n          if (connection && connection.readyState === WebSocket.OPEN) {\n            setMessages(prev => [...prev, { type: 'system', text: 'Dinleniyor...' }]);\n            connection.send(reader.result);\n          } else {\n            console.log('Ses gönderilemiyor, bağlantı kapalı');\n            setMessages(prev => [...prev, { type: 'error', text: 'Bağlantı hatası, yeniden bağlanılıyor...' }]);\n            connectWebSocket();\n          }\n        };\n        \n        reader.readAsDataURL(audioBlob);\n      };\n\n      mediaRecorder.current.start();\n      setIsRecording(true);\n\n    } catch (error) {\n      console.error('Mikrofon erişim hatası:', error);\n      setMessages(prev => [...prev, { type: 'error', text: 'Mikrofon hatası: ' + error.message }]);\n      setIsRecording(false);\n    }\n  };\n\n  const handleFileUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      const response = await fetch('http://localhost:8000/upload-database', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        setMessages(prev => [...prev, { type: 'system', text: 'Veritabanı başarıyla yüklendi' }]);\n      } else {\n        const errorText = await response.text();\n        setMessages(prev => [...prev, { type: 'error', text: 'Veritabanı yükleme hatası: ' + errorText }]);\n      }\n    } catch (error) {\n      console.error('Error uploading database:', error);\n      setMessages(prev => [...prev, { type: 'error', text: 'Veritabanı yükleme hatası: ' + error.message }]);\n    }\n  };\n\n  const toggleRecording = async () => {\n    if (isRecording) {\n      // Kaydı durdur\n      if (mediaRecorder.current && mediaRecorder.current.state === 'recording') {\n        mediaRecorder.current.stop();\n        mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n      }\n      setIsRecording(false);\n    } else {\n      // Yeni kayıt başlat\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        mediaRecorder.current = new MediaRecorder(stream, {\n          mimeType: 'audio/webm;codecs=opus'\n        });\n        audioChunks.current = [];\n        \n        mediaRecorder.current.ondataavailable = (event) => {\n          if (event.data.size > 0) {\n            audioChunks.current.push(event.data);\n          }\n        };\n\n        mediaRecorder.current.onstop = async () => {\n          const audioBlob = new Blob(audioChunks.current, { type: 'audio/webm;codecs=opus' });\n          const reader = new FileReader();\n          \n          reader.onload = async () => {\n            if (connection && connection.readyState === WebSocket.OPEN) {\n              setMessages(prev => [...prev, { type: 'system', text: 'Dinleniyor...' }]);\n              connection.send(reader.result);\n            } else {\n              setMessages(prev => [...prev, { type: 'error', text: 'Bağlantı hatası, yeniden bağlanılıyor...' }]);\n              connectWebSocket();\n            }\n          };\n          \n          reader.readAsDataURL(audioBlob);\n        };\n\n        mediaRecorder.current.start();\n        setIsRecording(true);\n\n      } catch (error) {\n        console.error('Mikrofon erişim hatası:', error);\n        setMessages(prev => [...prev, { type: 'error', text: 'Mikrofon hatası: ' + error.message }]);\n        setIsRecording(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    let mainWs = null;\n    let welcomeWs = null;\n\n    const initializeConnection = async () => {\n      // Ana WebSocket bağlantısını kur\n      mainWs = connectWebSocket();\n      \n      // Hoşgeldin mesajı için yeni WebSocket bağlantısı\n      welcomeWs = new WebSocket('ws://localhost:8000/ws');\n      welcomeWs.onopen = () => {\n        welcomeWs.send(JSON.stringify({ type: 'welcome' }));\n      };\n\n      welcomeWs.onmessage = async (event) => {\n        try {\n          const response = JSON.parse(event.data);\n          setMessages([{ type: 'bot', text: response.text }]);\n          \n          if (response.audio) {\n            const audio = new Audio(response.audio);\n            await audio.play().catch(console.error);\n            welcomeWs.close();\n          }\n        } catch (error) {\n          console.error('Hoşgeldin mesajı hatası:', error);\n          welcomeWs.close();\n        }\n      };\n\n      welcomeWs.onerror = () => {\n        console.error('Hoşgeldin bağlantısı hatası');\n        welcomeWs.close();\n      };\n    };\n\n    initializeConnection();\n\n    return () => {\n      if (reconnectTimeout.current) {\n        clearTimeout(reconnectTimeout.current);\n      }\n      if (mainWs) {\n        mainWs.close(1000, 'Component unmounting');\n      }\n      if (welcomeWs) {\n        welcomeWs.close();\n      }\n      if (mediaRecorder.current) {\n        mediaRecorder.current.stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  const getMessageColor = (type) => {\n    switch (type) {\n      case 'bot':\n        return 'primary.main';\n      case 'user':\n        return 'success.main';\n      case 'error':\n        return 'error.main';\n      case 'system':\n        return 'text.secondary';\n      default:\n        return 'text.primary';\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ my: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n          Türkçe Sesli Asistan\n        </Typography>\n        \n        <Paper elevation={3} sx={{ p: 2, mb: 2 }}>\n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <input\n              accept=\".json\"\n              style={{ display: 'none' }}\n              id=\"database-file\"\n              type=\"file\"\n              onChange={handleFileUpload}\n            />\n            <label htmlFor=\"database-file\" style={{ flexGrow: 1 }}>\n              <Button\n                variant=\"contained\"\n                component=\"span\"\n                fullWidth\n                startIcon={<UploadFileIcon />}\n              >\n                Veritabanı Yükle\n              </Button>\n            </label>\n            <IconButton \n              color={isRecording ? \"error\" : \"primary\"}\n              onClick={toggleRecording}\n              sx={{ width: 56, height: 56 }}\n            >\n              {isRecording ? <StopIcon /> : <MicIcon />}\n            </IconButton>\n          </Box>\n        </Paper>\n\n        <Paper elevation={3} sx={{ p: 2, mb: 2, minHeight: '300px', maxHeight: '500px', overflow: 'auto' }}>\n          <List>\n            {messages.map((message, index) => (\n              <ListItem key={index}>\n                <ListItemText\n                  primary={message.text}\n                  secondary={\n                    message.type === 'bot' ? 'OtomolAi' : \n                    message.type === 'user' ? 'Osman Bey' :\n                    message.type === 'system' ? 'Sistem' : \n                    'Hata'\n                  }\n                  sx={{ \n                    color: getMessageColor(message.type),\n                    textAlign: message.type === 'user' ? 'right' : 'left'\n                  }}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </Paper>\n      </Box>\n    </Container>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}